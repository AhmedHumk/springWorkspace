spring.application.name=BasicServer
debug=false

# Spring Boot 3.2+ and Java 21+ support it.
#spring.threads.virtual.enabled=true

# PostGresql database information
spring.datasource.url=jdbc:postgresql://localhost:5432/banking_system
spring.datasource.username=postgres
spring.datasource.password=root1

# HikariCP Pool settings
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED

# JPA / Hibernate
# prevents Hibernate from trying to auto-create the schema since you already provide it via SQL.
spring.jpa.hibernate.ddl-auto=update
# call schema.sql
spring.sql.init.mode=always
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.open-in-view=false

############################################
# Tomcat tuning (accept/queue/threads/keepalive)
############################################
# Max concurrent TCP connections Tomcat will accept
server.tomcat.max-connections=20000
# Queue size when all connections are busy
server.tomcat.accept-count=5000
# Small pool for Tomcat worker threads; virtual threads run business logic
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=20
# Keep-alive: number of requests per connection before closing
server.tomcat.max-keep-alive-requests=100
server.tomcat.keep-alive-timeout=5000
# Drop slow connections faster
server.tomcat.connection-timeout=20000
server.servlet.session.timeout=20000
#OpenAi config
# my key should be safely stored somewhere 
# and the rest can be set normally..
# my key in this project will be stored in system variables
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.api.model=gpt-4o